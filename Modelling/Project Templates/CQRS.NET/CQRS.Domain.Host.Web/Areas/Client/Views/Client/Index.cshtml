@model IEnumerable<$safeprojectname$.Areas.Client.Controllers.ClientController.ApiMethodModel>
window.api = window.api || {
	metadata: @Html.Raw(Json.Encode(Model)),
	useJson: true
};

$.each(window.api.metadata, function (i, action)
{
	if (!window.api[action.ControllerName])
	{
		window.api[action.ControllerName] = {};
	}
	window.api[action.ControllerName][action.ActionName] = function (parameters)
	{
		var url = '@Url.Content(Request.Url.AbsoluteUri.Substring(0, Request.Url.AbsoluteUri.Length - Request.Url.AbsolutePath.Length))@Url.Content("~/")' + action.Url;
		var data = [];

		if (action.Parameters.length == 1 && action.Parameters[0].Name == "parameters")
		{
			data = parameters;
		}
		else
		{
			$.each(action.Parameters, function (j, parameter)
			{
				if (parameters[parameter.Name] === undefined)
				{
					console.error('Missing parameter: ' + parameter.Name + ' for API: ' + action.ControllerName + '/' + action.ActionName);
				}
				else if (parameter.IsUriParameter)
				{
					url = url.replace("{" + parameter.Name + "}", parameters[parameter.Name]);
				}
				else if (data[parameter.Name] === undefined)
				{
					data[parameter.Name] = parameters[parameter.Name];
				}
				else
				{
					console.error('Detected multiple body-parameters for API: ' + action.ControllerName + '/' + action.ActionName);
				}
			});
		}

		if (window.api.useJson)
			return $.ajax({
				type: action.Method,
				url: url,
				data: JSON.stringify(data),
				contentType: 'application/json'
			});
		return $.ajax({
			type: action.Method,
			url: url,
			data: data
		});
	};
});
