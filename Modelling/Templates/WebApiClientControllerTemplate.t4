<#@ Include File="TemplateHeader.t4"  #>
<#@ Modeling ElementType="Microsoft.VisualStudio.Uml.Classes.IPackage" Processor="ModelingProcessor" ApplyStereotypes="CSharp" #>
<#@ Import Namespace="Microsoft.VisualStudio.ArchitectureTools.Extensibility.Uml" #>
<#@ Import Namespace="Microsoft.VisualStudio.Uml.AuxiliaryConstructs" #>
<#@ import namespace="Microsoft.VisualStudio.Uml.Classes" #>
<#@ import namespace="System.Linq" #>
<#@ Include File="CSharpCommentHelpers.t4" #>
<#@ Include File="CSharpHelpers.t4" #>
<#@ Include File="CqrsTemplateHelpers.t4" #>
<#@ Include File="ModelHelper.t4" #>
<#@ Output Extension=".cs" #>
<#
var stereoTypeProperties = this.Element.AppliedStereotypes.Single(property => property.Name == "Module");

// Header
WriteAutoGeneratedWarningHeader();

string classNamespace = GetNamespace(this.Element.Namespace);
string className = this.Element.Name;

// using statements
#>

using System.CodeDom.Compiler;
using System.Web.Mvc;

namespace <#= classNamespace #>.Controllers
{
<#
	// Class and Attributes
#>
	/// <summary>
	/// An <see cref="Controller">API controller</see> for all publically exposed sample methods and queries.
	/// </summary>
	<#= GetGeneratedCodeAttribute() #>
	[RequireHttps]
	public partial class <#= className #>Controller : Controller
	{<#
		INamedElement domainElement = (INamedElement)FindDomainElement(this.Element);

		IList<INamedElement> allDataStores = new List<INamedElement>();
		foreach (INamedElement element in AllElements(this.Element, "AggregateRoot").OfType<INamedElement>().OrderBy(e => e.Name))
		{
#>

		public ActionResult <#= element.Name #>()
		{
			ViewBag.Message = "<#= className #> :: <#= element.Name #>";

			return View("../../<#= ((INamedElement)domainElement.Owner).Name #>/<#= domainElement.Name #>/<#= className #>/Services/Views/<#= element.Name #>Service");
		}
<#
		}
#>
	}
}
<#+
	protected override bool AppliesToElement()
	{
		return ShouldGenerateCodeForElement(this.Element) && this.Element.AppliedStereotypes.Any(property => property.Name == "Module");
	}
#>