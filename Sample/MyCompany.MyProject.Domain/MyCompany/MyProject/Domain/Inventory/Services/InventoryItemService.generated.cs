//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#region Copyright
// -----------------------------------------------------------------------
// <copyright company="cdmdotnet Limited">
//     Copyright cdmdotnet Limited. All rights reserved.
// </copyright>
// -----------------------------------------------------------------------
#endregion
using Cqrs.Domain;
using MyCompany.MyProject.Domain.Inventory;
using MyCompany.MyProject.Domain.Inventory.Entities;
using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;
using System.ServiceModel;
using System.Text;
using Cqrs.Authentication;
using Cqrs.Services;

namespace MyCompany.MyProject.Domain.Inventory.Services
{
	public  partial class InventoryItemService 
	{

		public virtual IServiceResponseWithResultData<IEnumerable<Entities.InventoryItemSummaryEntity>> GetAll(IServiceRequestWithData<System.Guid, InventoryItemServiceGetAllParameters> serviceRequest)
		{
			AuthenticationTokenHelper.SetAuthenticationToken(serviceRequest.AuthenticationToken);
			IServiceResponseWithResultData<IEnumerable<Entities.InventoryItemSummaryEntity>> results = null;
			OnGetAll(serviceRequest, ref results);
			return CompleteResponse(results);
		}

		partial void OnGetAll(IServiceRequestWithData<System.Guid, InventoryItemServiceGetAllParameters> serviceRequest, ref IServiceResponseWithResultData<IEnumerable<Entities.InventoryItemSummaryEntity>> results);


		public virtual IServiceResponseWithResultData<Entities.InventoryItemEntity> GetByRsn(IServiceRequestWithData<System.Guid, InventoryItemServiceGetByRsnParameters> serviceRequest)
		{
			AuthenticationTokenHelper.SetAuthenticationToken(serviceRequest.AuthenticationToken);
			IServiceResponseWithResultData<Entities.InventoryItemEntity> results = null;
			OnGetByRsn(serviceRequest, ref results);
			return CompleteResponse(results);
		}

		partial void OnGetByRsn(IServiceRequestWithData<System.Guid, InventoryItemServiceGetByRsnParameters> serviceRequest, ref IServiceResponseWithResultData<Entities.InventoryItemEntity> results);


		public virtual IServiceResponse ChangeName(IServiceRequestWithData<System.Guid, InventoryItemServiceChangeNameParameters> serviceRequest)
		{
			AuthenticationTokenHelper.SetAuthenticationToken(serviceRequest.AuthenticationToken);
			IServiceResponse results = null;
			OnChangeName(serviceRequest, ref results);
			return CompleteResponse(results);
		}

		partial void OnChangeName(IServiceRequestWithData<System.Guid, InventoryItemServiceChangeNameParameters> serviceRequest, ref IServiceResponse results);


		public virtual IServiceResponse CheckIn(IServiceRequestWithData<System.Guid, InventoryItemServiceCheckInParameters> serviceRequest)
		{
			AuthenticationTokenHelper.SetAuthenticationToken(serviceRequest.AuthenticationToken);
			IServiceResponse results = null;
			OnCheckIn(serviceRequest, ref results);
			return CompleteResponse(results);
		}

		partial void OnCheckIn(IServiceRequestWithData<System.Guid, InventoryItemServiceCheckInParameters> serviceRequest, ref IServiceResponse results);


		public virtual IServiceResponse Create(IServiceRequestWithData<System.Guid, InventoryItemServiceCreateParameters> serviceRequest)
		{
			AuthenticationTokenHelper.SetAuthenticationToken(serviceRequest.AuthenticationToken);
			IServiceResponse results = null;
			OnCreate(serviceRequest, ref results);
			return CompleteResponse(results);
		}

		partial void OnCreate(IServiceRequestWithData<System.Guid, InventoryItemServiceCreateParameters> serviceRequest, ref IServiceResponse results);


		public virtual IServiceResponse Deactivate(IServiceRequestWithData<System.Guid, InventoryItemServiceDeactivateParameters> serviceRequest)
		{
			AuthenticationTokenHelper.SetAuthenticationToken(serviceRequest.AuthenticationToken);
			IServiceResponse results = null;
			OnDeactivate(serviceRequest, ref results);
			return CompleteResponse(results);
		}

		partial void OnDeactivate(IServiceRequestWithData<System.Guid, InventoryItemServiceDeactivateParameters> serviceRequest, ref IServiceResponse results);


		public virtual IServiceResponse Remove(IServiceRequestWithData<System.Guid, InventoryItemServiceRemoveParameters> serviceRequest)
		{
			AuthenticationTokenHelper.SetAuthenticationToken(serviceRequest.AuthenticationToken);
			IServiceResponse results = null;
			OnRemove(serviceRequest, ref results);
			return CompleteResponse(results);
		}

		partial void OnRemove(IServiceRequestWithData<System.Guid, InventoryItemServiceRemoveParameters> serviceRequest, ref IServiceResponse results);

	}
}
